{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ContatoComponent = class ContatoComponent {\n  constructor(_fb, _notifierService) {\n    this._fb = _fb;\n    this._notifierService = _notifierService;\n    this._notifierService = _notifierService;\n  }\n\n  ngOnInit() {\n    this.formGroupContato();\n  }\n\n  formGroupContato() {\n    this.formContato = this._fb.group({\n      name: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(5)]],\n      email: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(10)]],\n      subject: ['', [Validators.required, Validators.maxLength(100), Validators.minLength(5)]],\n      message: ['', [Validators.required, Validators.maxLength(500), Validators.minLength(10)]]\n    });\n  }\n\n  onSubmit() {\n    if (this.formContato.invalid) {\n      this.formContato.markAllAsTouched();\n\n      this._notifierService.notify('error', 'Campos obrigatórios não informados.');\n    }\n  }\n\n  applyCssErro(campo) {\n    return {\n      'has-error': this.validTouched(campo),\n      'has-feedback': this.validTouched(campo)\n    };\n  }\n\n  validTouched(campo) {\n    var _a, _b, _c;\n\n    console.log((_a = this.formContato.get(campo)) === null || _a === void 0 ? void 0 : _a.errors);\n    return !((_b = this.formContato.get(campo)) === null || _b === void 0 ? void 0 : _b.valid) && ((_c = this.formContato.get(campo)) === null || _c === void 0 ? void 0 : _c.touched);\n  }\n\n  getErrorMessage(campo) {\n    var _a;\n\n    return (_a = this.formContato.get(campo)) === null || _a === void 0 ? void 0 : _a.getError;\n  }\n\n};\nContatoComponent = __decorate([Component({\n  selector: 'app-contato',\n  templateUrl: './contato.component.html',\n  styleUrls: ['./contato.component.css']\n})], ContatoComponent);\nexport { ContatoComponent };","map":null,"metadata":{},"sourceType":"module"}