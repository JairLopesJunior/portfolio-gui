{"ast":null,"code":"import { isDevMode, Component, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { start, end } from 'perf-marks/marks';\nimport { CommonModule } from '@angular/common';\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-skeleton-loader.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nconst _c0 = function (a0, a1, a2, a3) {\n  return {\n    circle: a0,\n    progress: a1,\n    \"progress-dark\": a2,\n    pulse: a3\n  };\n};\n\nfunction NgxSkeletonLoaderComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 1);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(3, _c0, ctx_r0.appearance === \"circle\", ctx_r0.animation === \"progress\", ctx_r0.animation === \"progress-dark\", ctx_r0.animation === \"pulse\"))(\"ngStyle\", ctx_r0.theme);\n    ɵngcc0.ɵɵattribute(\"aria-valuetext\", ctx_r0.loadingText);\n  }\n}\n\nlet NgxSkeletonLoaderComponent = /*#__PURE__*/(() => {\n  class NgxSkeletonLoaderComponent {\n    constructor() {\n      this.count = 1;\n      this.loadingText = 'Loading...';\n      this.appearance = '';\n      this.animation = 'progress'; // This is required since ngStyle is using `any` as well\n      // More details in https://angular.io/api/common/NgStyle\n      // tslint:disable-next-line: no-any\n\n      this.theme = {}; // tslint:disable-next-line: no-any\n\n      this.items = [];\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnInit() {\n      start('NgxSkeletonLoader:Rendered');\n      start('NgxSkeletonLoader:Loaded');\n      this.items.length = +this.count;\n      /** @type {?} */\n\n      const allowedAnimations = ['progress', 'progress-dark', 'pulse', 'false'];\n\n      if (allowedAnimations.indexOf(String(this.animation)) === -1) {\n        // Shows error message only in Development\n        if (isDevMode()) {\n          console.error(`\\`NgxSkeletonLoaderComponent\\` need to receive 'animation' as: ${allowedAnimations.join(', ')}. Forcing default to \"progress\".`);\n        }\n\n        this.animation = 'progress';\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngAfterViewInit() {\n      end('NgxSkeletonLoader:Rendered');\n    }\n    /**\n     * @return {?}\n     */\n\n\n    ngOnDestroy() {\n      end('NgxSkeletonLoader:Loaded');\n    }\n\n  }\n\n  NgxSkeletonLoaderComponent.ɵfac = function NgxSkeletonLoaderComponent_Factory(t) {\n    return new (t || NgxSkeletonLoaderComponent)();\n  };\n\n  NgxSkeletonLoaderComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: NgxSkeletonLoaderComponent,\n    selectors: [[\"ngx-skeleton-loader\"]],\n    inputs: {\n      count: \"count\",\n      loadingText: \"loadingText\",\n      appearance: \"appearance\",\n      animation: \"animation\",\n      theme: \"theme\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"loader\", \"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 3, \"ngClass\", \"ngStyle\", 4, \"ngFor\", \"ngForOf\"], [\"aria-busy\", \"true\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", \"role\", \"progressbar\", \"tabindex\", \"0\", 1, \"loader\", 3, \"ngClass\", \"ngStyle\"]],\n    template: function NgxSkeletonLoaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgxSkeletonLoaderComponent_span_0_Template, 1, 8, \"span\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgStyle],\n    styles: [\".loader[_ngcontent-%COMP%]{box-sizing:border-box;overflow:hidden;position:relative;background:no-repeat #eff1f6;border-radius:4px;width:100%;height:20px;display:inline-block;margin-bottom:10px;will-change:transform}.loader[_ngcontent-%COMP%]:after, .loader[_ngcontent-%COMP%]:before{box-sizing:border-box}.loader.circle[_ngcontent-%COMP%]{width:40px;height:40px;margin:5px;border-radius:50%}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{transform:translate3d(0,0,0)}.loader.progress-dark[_ngcontent-%COMP%]:after, .loader.progress-dark[_ngcontent-%COMP%]:before, .loader.progress[_ngcontent-%COMP%]:after, .loader.progress[_ngcontent-%COMP%]:before{box-sizing:border-box}.loader.progress-dark[_ngcontent-%COMP%]:before, .loader.progress[_ngcontent-%COMP%]:before{-webkit-animation:2s ease-in-out infinite progress;animation:2s ease-in-out infinite progress;background-size:200px 100%;position:absolute;z-index:1;top:0;left:0;width:200px;height:100%;content:\\\"\\\"}.loader.progress[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,rgba(255,255,255,0),rgba(255,255,255,.6),rgba(255,255,255,0))}.loader.progress-dark[_ngcontent-%COMP%]:before{background-image:linear-gradient(90deg,transparent,rgba(0,0,0,.2),transparent)}.loader.pulse[_ngcontent-%COMP%]{-webkit-animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;animation:1.5s cubic-bezier(.4,0,.2,1) infinite pulse;-webkit-animation-delay:.5s;animation-delay:.5s}@media (prefers-reduced-motion:reduce){.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%], .loader.pulse[_ngcontent-%COMP%]{-webkit-animation:none;animation:none}.loader.progress[_ngcontent-%COMP%], .loader.progress-dark[_ngcontent-%COMP%]{background-image:none}}@-webkit-keyframes progress{0%{transform:translate3d(-200px,0,0)}100%{transform:translate3d(calc(200px + 100vw),0,0)}}@keyframes progress{0%{transform:translate3d(-200px,0,0)}100%{transform:translate3d(calc(200px + 100vw),0,0)}}@-webkit-keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}@keyframes pulse{0%,100%{opacity:1}50%{opacity:.4}}\"],\n    changeDetection: 0\n  });\n  return NgxSkeletonLoaderComponent;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nif (false) {\n  /** @type {?} */\n  NgxSkeletonLoaderComponent.ngAcceptInputType_count;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.ngAcceptInputType_animation;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.count;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.loadingText;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.appearance;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.animation;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.theme;\n  /** @type {?} */\n\n  NgxSkeletonLoaderComponent.prototype.items;\n}\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/ngx-skeleton-loader.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nlet NgxSkeletonLoaderModule = /*#__PURE__*/(() => {\n  class NgxSkeletonLoaderModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n      return {\n        ngModule: NgxSkeletonLoaderModule\n      };\n    }\n\n  }\n\n  NgxSkeletonLoaderModule.ɵfac = function NgxSkeletonLoaderModule_Factory(t) {\n    return new (t || NgxSkeletonLoaderModule)();\n  };\n\n  NgxSkeletonLoaderModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: NgxSkeletonLoaderModule\n  });\n  NgxSkeletonLoaderModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return NgxSkeletonLoaderModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxSkeletonLoaderModule, {\n    declarations: function () {\n      return [NgxSkeletonLoaderComponent];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [NgxSkeletonLoaderComponent];\n    }\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: ngx-skeleton-loader.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nexport { NgxSkeletonLoaderComponent, NgxSkeletonLoaderModule }; //# sourceMappingURL=ngx-skeleton-loader.js.map","map":null,"metadata":{},"sourceType":"module"}