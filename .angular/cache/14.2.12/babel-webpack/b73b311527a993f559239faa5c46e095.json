{"ast":null,"code":"import { forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../field-control-erro/field-control-erro.component\";\nexport let InputTextComponent = /*#__PURE__*/(() => {\n  class InputTextComponent {\n    constructor() {\n      this.label = \"\";\n      this.id = \"\";\n      this.isRequired = false;\n      this.type = \"\";\n\n      this.onChange = () => {};\n\n      this.onTouch = () => {};\n    }\n\n    writeValue(value) {\n      this.value = value;\n    }\n\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n      this.onTouch = fn;\n    }\n\n    setDisabledState(isDisabled) {// Implementar se necessário\n    }\n\n    onInputChange(event) {\n      this.value = event.target.value;\n      this.onChange(this.value);\n      this.onTouch();\n    }\n\n  }\n\n  InputTextComponent.ɵfac = function InputTextComponent_Factory(t) {\n    return new (t || InputTextComponent)();\n  };\n\n  InputTextComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputTextComponent,\n    selectors: [[\"app-input-text\"]],\n    inputs: {\n      label: \"label\",\n      id: \"id\",\n      isRequired: \"isRequired\",\n      type: \"type\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputTextComponent),\n      multi: true\n    }])],\n    decls: 5,\n    vars: 8,\n    consts: [[1, \"form-group\"], [1, \"col-sm-2\", \"col-form-label\", 3, \"for\"], [3, \"type\", \"id\", \"required\", \"value\", \"input\"], [3, \"mostrarErro\", \"msgErro\"]],\n    template: function InputTextComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"label\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 2);\n        i0.ɵɵlistener(\"input\", function InputTextComponent_Template_input_input_3_listener($event) {\n          return ctx.onInputChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-field-control-erro\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", ctx.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"type\", ctx.type)(\"id\", ctx.id)(\"required\", ctx.isRequired)(\"value\", ctx.value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mostrarErro\", ctx.validTouched(ctx.control))(\"msgErro\", ctx.getErrorMessage());\n      }\n    },\n    dependencies: [i1.FieldControlErroComponent],\n    styles: [\"label[_ngcontent-%COMP%]{color:#fff;white-space:nowrap}.ng-invalid[_ngcontent-%COMP%]{border:1px solid red}\"]\n  });\n  return InputTextComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}